name: CI/CD

on: 
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'

env: 
  REGISTRY: docker.io
  TAG: ${{ github.run_id }}

jobs:

  build: 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.7

    - name: Setting Up Go 1.22
      uses: actions/setup-go@v5
      with: 
        go-version: 1.22

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build 
      run: go build -o go-app

    - name: Test
      run: go test ./...

  Code-Quality:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run golang-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: v2.1.1
      continue-on-error: true  # Let the pipeline continue even if lint fails

  Docker-Image-Push: 
    runs-on: ubuntu-latest
    needs: Code-Quality

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3.5.0

    - name: Login to Dockerhub
      uses: docker/login-action@v3
      with: 
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v6.5.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/go-portfolio:${{ env.TAG }}
          ${{ secrets.DOCKERHUB_USERNAME }}/go-portfolio:latest

  Updating-helm-tags:
    runs-on: ubuntu-latest
    needs: Docker-Image-Push
    
    steps:
    - name: Cloning the helm repo
      uses: GuillaumeFalourd/clone-github-repo-action@v2.3
      with:
        owner: 'dummy-roro'
        repository: 'go-portfolio-project-manifests'
        access-token: ${{ secrets.REPO_PAT }}
        branch: 'master'

    - name: Updating values in helm
      env:
        TAG: ${{ env.TAG }}
      run: |
        set -e
        cd go-portfolio-project-manifests/charts
        sed -i "s/tag: .*/tag: ${TAG}/" values.yaml

    - name: Pushing changes
      run: |
        cd go-portfolio-project-manifests
        git config --global user.email "dummyroro@gmail.com"
        git config --global user.name "dummy-roro"
        git add charts/values.yaml
        git commit -am "Updated values.yaml file"
        git push
